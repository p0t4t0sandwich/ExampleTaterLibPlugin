plugins {
    id('java')
    id('com.github.johnrengelman.shadow') version('8.1.1')
}

sourceCompatibility = targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'NeuralNexus'
        url = 'https://maven.neuralnexus.dev/releases'
    }
    maven {
        name = "minecraft-repo"
        url = "https://libraries.minecraft.net/"
    }
}

dependencies {
    // TaterLib
    compileOnly("dev.neuralnexus:taterlib-api:${taterlib_version}")
    compileOnly('dev.neuralnexus:entrypoint-spoof:0.1.1')

    // YAML
    implementation('dev.dejvokep:boosted-yaml:1.3.1')

    // Brigadier
    compileOnly('com.mojang:brigadier:1.0.18')

    // You can rely on dependencies that TaterLib bundles into it's uber Jar
    // Keep in mind that you'll have to relocate them if you want to use them (see below)

    // Google Guava
    compileOnly('com.google.guava:guava:33.0.0-jre')
}

tasks.withType(ProcessResources).configureEach {
    filesMatching([
            'plugin.yml',
            'bungee.yml',
            'fabric.mod.json',
            'META-INF/mods.toml', 'mcmod.info', 'pack.mcmeta',
            'META-INF/sponge_plugins.json',
            'velocity-plugin.json'
    ]) {
        expand project.properties
    }
}

shadowJar {
    dependencies {
        include(dependency("${group_id}:${project_id}:${version}"))
//        exclude('META-INF', 'META-INF/**')
        include(dependency("dev.dejvokep:boosted-yaml:1.3.1"))
    }
    // Goolge Guava
    relocate('com.google.common', "dev.neuralnexus.taterlib.lib.google.common")
    relocate('com.google.thirdparty', "dev.neuralnexus.taterlib.lib.google.thirdparty")

    relocate('dev.dejvokep', "${group_id}.${project_id}.lib.dejvokep")
    relocate('org.intellij', "${group_id}.${project_id}.lib.intellij")
    relocate('org.jetbrains', "${group_id}.${project_id}.lib.jetbrains")
    from(["README.md", "LICENSE", "LICENSE-API"]) {
        into("META-INF")
    }
    archiveClassifier = ''
}

artifacts {
    archives(shadowJar)
}
